//Global selections and variables
const colorDivs = document.querySelectorAll(".color")
const generateBtn = document.querySelector(".generate")
const sliders = document.querySelectorAll('input[type="range"]')
const currentHexes = document.querySelectorAll(".color h2")
let initialColors

//Event Listeners
sliders.forEach(slider => {
    slider.addEventListener('input', hslControls)
})

colorDivs.forEach((div, index) => {
    div.addEventListener('change', () => {
        updateColorText(index)
    })
})

//Color Generator
function generateHexes() {
    // Using custom calculations to generate the hex value
    // const possibleValues = "0123456789ABCDEF"
    // let hexValue = "#"
    // for (let i = 0; i < 6; i++) {
    //     hexValue += possibleValues[Math.floor(Math.random()*16)]
    // }
    // return hexValue

    //Using chroma library to generate the hex value
    return chroma.random()
}

function colorizeSliders(color, hueDiv, brightnessDiv, saturationDiv) {

    //Change Brightness
    const midBrightness = color.set('hsl.l', 0.5)
    const brightnessScale = chroma.scale(['white', midBrightness, 'black'])
    brightnessDiv.style.backgroundImage = `linear-gradient( to right, ${brightnessScale(0)}, ${brightnessScale(0.5)}, ${brightnessScale(1)})`

    //Change  Hue
    hueDiv.style.backgroundImage = `linear-gradient(to right, rgb(204, 75, 75), rgb(204,204 ,75),rgb(75, 204, 75),rgb(75, 204, 204),rgb(75,75,204),rgb(204,75,204),rgb(204,75,75))`

    //Change Saturation
    const noSaturation = color.set('hsl.s', 0)
    const fullSaturation = color.set('hsl.s', 1)
    const saturationScale = chroma.scale([noSaturation, color, fullSaturation])
    saturationDiv.style.backgroundImage = `linear-gradient(to right, ${saturationScale(0)}, ${saturationScale(1)})`
}

function randomColors() {
    initialColors = []
    colorDivs.forEach(colorDiv => {
        const randomColor = generateHexes()
        const hexText = colorDiv.children[0]

        initialColors.push(chroma(randomColor).hex())

        //Change the text and background to the randomColor generated by chroma
        hexText.innerText = randomColor
        colorDiv.style.backgroundColor = randomColor

        //Check the contrast of the hexText
        checkTextContrast(hexText, randomColor)

        //Initialise Colorize Sliders
        const sliders = colorDiv.querySelectorAll('.sliders input')
        const hue = sliders[0]
        const brightness = sliders[1]
        const saturation = sliders[2]
        colorizeSliders(chroma(randomColor), hue, brightness, saturation)
    })
}

function checkTextContrast(text, color) {
    if (chroma(color).luminance() > 0.5) {
        text.style.color = 'black'
    } else {
        text.style.color = 'white'
    }
}

function hslControls(event) {
    const index = event.target.getAttribute('data-hue') ||
        event.target.getAttribute('data-bright') ||
        event.target.getAttribute('data-sat')

    // const color = colorDivs[index].querySelector('h2').innerText
    const color = initialColors[index]
    const sliders = event.target.parentElement.querySelectorAll("input[type='range']")
    const hue = sliders[0]
    const brightness = sliders[1]
    const saturation = sliders[2]
    colorDivs[index].style.backgroundColor = chroma(color)
        .set('hsl.h', hue.value)
        .set('hsl.s', saturation.value)
        .set('hsl.l', brightness.value)
}

function updateColorText(index) {
    const currentDiv = colorDivs[index]
    const bgColor = chroma(currentDiv.style.backgroundColor)
    const icons = currentDiv.querySelectorAll('.controls button')
    const textHex = currentDiv.querySelector('h2')
    textHex.innerText = bgColor.hex()
    checkTextContrast(textHex, bgColor)
    for (icon of icons) {
        checkTextContrast(icon, bgColor)
    }
}

randomColors()